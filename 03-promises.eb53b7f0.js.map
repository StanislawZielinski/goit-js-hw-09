{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAAaC,SAASC,cAAc,SAO/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAMO,cAIV,SAASC,EAAcC,EAAUN,GAC/B,MAAMO,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBC,YAAW,KACLN,EACJI,EAAQ,C,SAACL,E,MAAUN,IAEnBY,EAAO,C,SAACN,E,MAAUN,MAEnBA,MAZPC,EAAQa,OAAOb,EAAMc,OACrBb,EAAOY,OAAOZ,EAAKa,OAejB,IAAK,IAAIC,EAAI,EAAGA,GAAKb,EAAOY,MAAOC,IACjCX,EAAcW,EAAGf,GACdgB,MAAK,EAACX,SAACA,EAAQN,MAAEA,MAClBkB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAqBd,QAAeN,UAE7DqB,OAAM,EAACf,SAACA,EAAQN,MAAEA,MACjBkB,EAAA1B,GAAS2B,OAAOG,QAAQ,oBAAoBhB,QAAeN,UAE7DC,GAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\".form\");\nimport Notiflix from 'notiflix';\nimport 'flatpickr/dist/flatpickr.min.css';\n// const delay = document.querySelector('[name=\"delay\"]');\n\n\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  delay = Number(delay.value);\n  step = Number(step.value);\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (shouldResolve) {\n          resolve({position, delay});\n          } else {\n          reject({position, delay});\n        }\n      }, delay);\n    });\n  };\n\n    for (let i = 1; i <= amount.value; i++) {\n      createPromise(i, delay)\n        .then(({position, delay}) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({position, delay}) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n      delay = delay +step;\n    };\n}\n\n\n\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","event","preventDefault","elements","delay","delay1","step","amount","currentTarget","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.eb53b7f0.js.map"}